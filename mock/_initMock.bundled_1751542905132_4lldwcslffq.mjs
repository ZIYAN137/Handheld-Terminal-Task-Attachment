// mock/initMock.js
var systemStatus = {
  fs: {
    success: true,
    message: "\u6587\u4EF6\u7CFB\u7EDF\u5B8C\u597D\u65E0\u635F"
  },
  db: {
    success: true,
    message: "\u6570\u636E\u5E93\u8FDE\u63A5\u6210\u529F\uFF0C\u54CD\u5E94\u65F6\u95F4 25ms"
  },
  agv: {
    success: true,
    message: "AGV \u63A7\u5236\u7CFB\u7EDF\u5FC3\u8DF3\u6B63\u5E38"
  },
  cam: {
    success: true,
    message: "\u6240\u6709\u6444\u50CF\u5934\u901A\u9053\u5747\u5728\u7EBF"
  }
};
var initMock_default = [
  // 1. Mock - 检查系统文件完整性
  {
    url: "/api/system/check/fs",
    method: "get",
    response: () => {
      if (systemStatus.fs.success) {
        return { code: 200, msg: systemStatus.fs.message, data: null };
      }
      return { code: 500, msg: "\u9519\u8BEF\uFF1A\u6838\u5FC3\u6587\u4EF6 a.dll \u5DF2\u635F\u574F", data: null };
    }
  },
  // 2. Mock - 检查数据库连接
  {
    url: "/api/system/check/db",
    method: "get",
    response: () => {
      if (systemStatus.db.success) {
        return { code: 200, msg: systemStatus.db.message, data: null };
      }
      return { code: 500, msg: "\u9519\u8BEF\uFF1A\u6570\u636E\u5E93\u8FDE\u63A5\u8D85\u65F6", data: null };
    }
  },
  // 3. Mock - 检查AGV连接
  {
    url: "/api/system/check/agv",
    method: "get",
    response: () => {
      if (systemStatus.agv.success) {
        return { code: 200, msg: systemStatus.agv.message, data: null };
      }
      return { code: 500, msg: "\u9519\u8BEF\uFF1A\u65E0\u6CD5 Ping \u901A\u8F66\u8F86\u4E3B\u673A", data: null };
    }
  },
  // 4. Mock - 检查摄像头连接
  {
    url: "/api/system/check/cam",
    method: "get",
    response: () => {
      if (systemStatus.cam.success) {
        return { code: 200, msg: systemStatus.cam.message, data: null };
      }
      return { code: 500, msg: "\u9519\u8BEF\uFF1A\u6444\u50CF\u5934\u8BA4\u8BC1\u5931\u8D25", data: null };
    }
  }
];
export {
  initMock_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay9pbml0TW9jay5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiY29uc3QgX19pbmplY3RlZF9maWxlbmFtZV9fID0gXCJDOlxcXFxVc2Vyc1xcXFxsZW5vdm9cXFxcRGVza3RvcFxcXFxcdTY1QjBcdTVFRkFcdTY1ODdcdTRFRjZcdTU5MzlcXFxcSGFuZGhlbGQtVGVybWluYWwtVGFzay1BdHRhY2htZW50XFxcXG1vY2tcXFxcaW5pdE1vY2suanNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiQzpcXFxcVXNlcnNcXFxcbGVub3ZvXFxcXERlc2t0b3BcXFxcXHU2NUIwXHU1RUZBXHU2NTg3XHU0RUY2XHU1OTM5XFxcXEhhbmRoZWxkLVRlcm1pbmFsLVRhc2stQXR0YWNobWVudFxcXFxtb2NrXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9DOi9Vc2Vycy9sZW5vdm8vRGVza3RvcC8lRTYlOTYlQjAlRTUlQkIlQkElRTYlOTYlODclRTQlQkIlQjYlRTUlQTQlQjkvSGFuZGhlbGQtVGVybWluYWwtVGFzay1BdHRhY2htZW50L21vY2svaW5pdE1vY2suanNcIjsvLyBtb2NrL2luaXQuanNcblxuY29uc3Qgc3lzdGVtU3RhdHVzID0ge1xuICAgIGZzOiB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgbWVzc2FnZTogJ1x1NjU4N1x1NEVGNlx1N0NGQlx1N0VERlx1NUI4Q1x1NTk3RFx1NjVFMFx1NjM1RicsXG4gICAgfSxcbiAgICBkYjoge1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdcdTY1NzBcdTYzNkVcdTVFOTNcdThGREVcdTYzQTVcdTYyMTBcdTUyOUZcdUZGMENcdTU0Q0RcdTVFOTRcdTY1RjZcdTk1RjQgMjVtcycsXG4gICAgfSxcbiAgICBhZ3Y6IHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiAnQUdWIFx1NjNBN1x1NTIzNlx1N0NGQlx1N0VERlx1NUZDM1x1OERGM1x1NkI2M1x1NUUzOCcsXG4gICAgfSxcbiAgICBjYW06IHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBtZXNzYWdlOiAnXHU2MjQwXHU2NzA5XHU2NDQ0XHU1MENGXHU1OTM0XHU5MDFBXHU5MDUzXHU1NzQ3XHU1NzI4XHU3RUJGJyxcbiAgICB9LFxuICB9O1xuXG5leHBvcnQgZGVmYXVsdCBbXG4vLyAxLiBNb2NrIC0gXHU2OEMwXHU2N0U1XHU3Q0ZCXHU3RURGXHU2NTg3XHU0RUY2XHU1QjhDXHU2NTc0XHU2MDI3XG57XG4gICAgdXJsOiAnL2FwaS9zeXN0ZW0vY2hlY2svZnMnLFxuICAgIG1ldGhvZDogJ2dldCcsXG4gICAgcmVzcG9uc2U6ICgpID0+IHtcbiAgICBpZiAoc3lzdGVtU3RhdHVzLmZzLnN1Y2Nlc3MpIHtcbiAgICAgICAgcmV0dXJuIHsgY29kZTogMjAwLCBtc2c6IHN5c3RlbVN0YXR1cy5mcy5tZXNzYWdlLCBkYXRhOiBudWxsIH07XG4gICAgfVxuICAgIHJldHVybiB7IGNvZGU6IDUwMCwgbXNnOiAnXHU5NTE5XHU4QkVGXHVGRjFBXHU2ODM4XHU1RkMzXHU2NTg3XHU0RUY2IGEuZGxsIFx1NURGMlx1NjM1Rlx1NTc0RicsIGRhdGE6IG51bGwgfTtcbiAgICB9LFxufSxcblxuLy8gMi4gTW9jayAtIFx1NjhDMFx1NjdFNVx1NjU3MFx1NjM2RVx1NUU5M1x1OEZERVx1NjNBNVxue1xuICAgIHVybDogJy9hcGkvc3lzdGVtL2NoZWNrL2RiJyxcbiAgICBtZXRob2Q6ICdnZXQnLFxuICAgIHJlc3BvbnNlOiAoKSA9PiB7XG4gICAgaWYgKHN5c3RlbVN0YXR1cy5kYi5zdWNjZXNzKSB7XG4gICAgICAgIHJldHVybiB7IGNvZGU6IDIwMCwgbXNnOiBzeXN0ZW1TdGF0dXMuZGIubWVzc2FnZSwgZGF0YTogbnVsbCB9O1xuICAgIH1cbiAgICByZXR1cm4geyBjb2RlOiA1MDAsIG1zZzogJ1x1OTUxOVx1OEJFRlx1RkYxQVx1NjU3MFx1NjM2RVx1NUU5M1x1OEZERVx1NjNBNVx1OEQ4NVx1NjVGNicsIGRhdGE6IG51bGwgfTtcbiAgICB9LFxufSxcblxuLy8gMy4gTW9jayAtIFx1NjhDMFx1NjdFNUFHVlx1OEZERVx1NjNBNVxue1xuICAgIHVybDogJy9hcGkvc3lzdGVtL2NoZWNrL2FndicsXG4gICAgbWV0aG9kOiAnZ2V0JyxcbiAgICByZXNwb25zZTogKCkgPT4ge1xuICAgIGlmIChzeXN0ZW1TdGF0dXMuYWd2LnN1Y2Nlc3MpIHtcbiAgICAgICAgcmV0dXJuIHsgY29kZTogMjAwLCBtc2c6IHN5c3RlbVN0YXR1cy5hZ3YubWVzc2FnZSwgZGF0YTogbnVsbCB9O1xuICAgIH1cbiAgICByZXR1cm4geyBjb2RlOiA1MDAsIG1zZzogJ1x1OTUxOVx1OEJFRlx1RkYxQVx1NjVFMFx1NkNENSBQaW5nIFx1OTAxQVx1OEY2Nlx1OEY4Nlx1NEUzQlx1NjczQScsIGRhdGE6IG51bGwgfTtcbiAgICB9LFxufSxcblxuLy8gNC4gTW9jayAtIFx1NjhDMFx1NjdFNVx1NjQ0NFx1NTBDRlx1NTkzNFx1OEZERVx1NjNBNVxue1xuICAgIHVybDogJy9hcGkvc3lzdGVtL2NoZWNrL2NhbScsXG4gICAgbWV0aG9kOiAnZ2V0JyxcbiAgICByZXNwb25zZTogKCkgPT4ge1xuICAgIGlmIChzeXN0ZW1TdGF0dXMuY2FtLnN1Y2Nlc3MpIHtcbiAgICAgICAgcmV0dXJuIHsgY29kZTogMjAwLCBtc2c6IHN5c3RlbVN0YXR1cy5jYW0ubWVzc2FnZSwgZGF0YTogbnVsbCB9O1xuICAgIH1cbiAgICByZXR1cm4geyBjb2RlOiA1MDAsIG1zZzogJ1x1OTUxOVx1OEJFRlx1RkYxQVx1NjQ0NFx1NTBDRlx1NTkzNFx1OEJBNFx1OEJDMVx1NTkzMVx1OEQyNScsIGRhdGE6IG51bGwgfTtcbiAgICB9LFxufSxcbl07Il0sCiAgIm1hcHBpbmdzIjogIjtBQUVBLElBQU0sZUFBZTtBQUFBLEVBQ2pCLElBQUk7QUFBQSxJQUNGLFNBQVM7QUFBQSxJQUNULFNBQVM7QUFBQSxFQUNYO0FBQUEsRUFDQSxJQUFJO0FBQUEsSUFDRixTQUFTO0FBQUEsSUFDVCxTQUFTO0FBQUEsRUFDWDtBQUFBLEVBQ0EsS0FBSztBQUFBLElBQ0gsU0FBUztBQUFBLElBQ1QsU0FBUztBQUFBLEVBQ1g7QUFBQSxFQUNBLEtBQUs7QUFBQSxJQUNILFNBQVM7QUFBQSxJQUNULFNBQVM7QUFBQSxFQUNYO0FBQ0Y7QUFFRixJQUFPLG1CQUFRO0FBQUE7QUFBQSxFQUVmO0FBQUEsSUFDSSxLQUFLO0FBQUEsSUFDTCxRQUFRO0FBQUEsSUFDUixVQUFVLE1BQU07QUFDaEIsVUFBSSxhQUFhLEdBQUcsU0FBUztBQUN6QixlQUFPLEVBQUUsTUFBTSxLQUFLLEtBQUssYUFBYSxHQUFHLFNBQVMsTUFBTSxLQUFLO0FBQUEsTUFDakU7QUFDQSxhQUFPLEVBQUUsTUFBTSxLQUFLLEtBQUssdUVBQXFCLE1BQU0sS0FBSztBQUFBLElBQ3pEO0FBQUEsRUFDSjtBQUFBO0FBQUEsRUFHQTtBQUFBLElBQ0ksS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsVUFBVSxNQUFNO0FBQ2hCLFVBQUksYUFBYSxHQUFHLFNBQVM7QUFDekIsZUFBTyxFQUFFLE1BQU0sS0FBSyxLQUFLLGFBQWEsR0FBRyxTQUFTLE1BQU0sS0FBSztBQUFBLE1BQ2pFO0FBQ0EsYUFBTyxFQUFFLE1BQU0sS0FBSyxLQUFLLGdFQUFjLE1BQU0sS0FBSztBQUFBLElBQ2xEO0FBQUEsRUFDSjtBQUFBO0FBQUEsRUFHQTtBQUFBLElBQ0ksS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsVUFBVSxNQUFNO0FBQ2hCLFVBQUksYUFBYSxJQUFJLFNBQVM7QUFDMUIsZUFBTyxFQUFFLE1BQU0sS0FBSyxLQUFLLGFBQWEsSUFBSSxTQUFTLE1BQU0sS0FBSztBQUFBLE1BQ2xFO0FBQ0EsYUFBTyxFQUFFLE1BQU0sS0FBSyxLQUFLLHNFQUFvQixNQUFNLEtBQUs7QUFBQSxJQUN4RDtBQUFBLEVBQ0o7QUFBQTtBQUFBLEVBR0E7QUFBQSxJQUNJLEtBQUs7QUFBQSxJQUNMLFFBQVE7QUFBQSxJQUNSLFVBQVUsTUFBTTtBQUNoQixVQUFJLGFBQWEsSUFBSSxTQUFTO0FBQzFCLGVBQU8sRUFBRSxNQUFNLEtBQUssS0FBSyxhQUFhLElBQUksU0FBUyxNQUFNLEtBQUs7QUFBQSxNQUNsRTtBQUNBLGFBQU8sRUFBRSxNQUFNLEtBQUssS0FBSyxnRUFBYyxNQUFNLEtBQUs7QUFBQSxJQUNsRDtBQUFBLEVBQ0o7QUFDQTsiLAogICJuYW1lcyI6IFtdCn0K
